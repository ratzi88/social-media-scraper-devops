// pipeline{
//     agent any
//     stages{
//         stage("Clonning devops folder"){
//             steps{
//                 echo "========clone========"
//                 dir("${env.BUILD_NUMBER}/devops") {
//                     git branch: 'main', credentialsId: '49bd9cd6-738c-4792-a6aa-fc25cffb434c', url: 'https://github.com/ratzi88/social-media-scraper-devops'
//                 }

//             }
//             post{
//                 always{
//                     echo "========git clone devops pass========"
//                 }
//                 // success{
//                 //     dir("${env.BUILD_NUMBER}") {
//                 //         sh "git rm -rf jenkinsfile"
//                 //         sh "git rm -rf README.md"
//                 //         // sh "git rm -rf .git"
//                 //     }
//                 // }
//                 failure{
//                     echo "========git clone devops failed========"
//                 }
//             }
//         }
//         stage("apt update upgrade"){
//             steps{
//                 sh "sudo apt update && sudo apt upgrade -y"
//                 }
//         }
//         stage("terraform installing") {
//             steps {
//                 sh """
//                     # Check if wget is installed, install if missing
//                     if ! dpkg -l | grep -q wget; then
//                         sudo apt install -y wget
//                     fi
                                
//                     # Check if unzip is installed, install if missing
//                     if ! dpkg -l | grep -q unzip; then
//                         sudo apt install -y unzip
//                     fi

//                     # Check if Terraform is already installed
//                     if ! command -v terraform &> /dev/null; then
//                         echo "Terraform not found, installing..."

//                         # Get the latest Terraform version
//                         latest_version=\$(wget -qO- https://releases.hashicorp.com/index.json | jq -r '.versions[].version' | sort -V | tail -n 1)
//                         wget https://releases.hashicorp.com/terraform/\${latest_version}/terraform_\${latest_version}_linux_amd64.zip
//                         unzip terraform_\${latest_version}_linux_amd64.zip
//                         sudo mv terraform /usr/local/bin/
//                     else
//                         echo "Terraform is already installed, skipping installation."
//                     fi

//                     # Verify Terraform installation
//                     terraform --version
//                     """
//             }
//         }
//         // stage("terraform installing"){
//         //     steps{
//         //         sh """
//         //             # Check if wget is installed, install if missing
//         //             if ! dpkg -l | grep -q wget; then
//         //                 sudo apt install -y wget
//         //             fi
                        
//         //             # Check if unzip is installed, install if missing
//         //             if ! dpkg -l | grep -q unzip; then
//         //                 sudo apt install -y unzip
//         //             fi

//         //             # Check if Terraform is already installed
//         //             if ! command -v terraform &> /dev/null; then
//         //                 echo "Terraform not found, installing..."
//         //                 wget https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip
//         //                 unzip terraform_1.6.0_linux_amd64.zip
//         //                 sudo mv terraform /usr/local/bin/
//         //             else
//         //                 echo "Terraform is already installed, skipping installation."
//         //             fi

//         //             # Verify Terraform installation
//         //                 terraform --version
//         //             """
//         //     }
//         // }

//         stage("A"){
//             steps{
//                 echo "====++++executing A++++===="
//             }
//             post{
//                 always{
//                     echo "====++++always++++===="
//                 }
//                 success{
//                     echo "====++++A executed successfully++++===="
//                 }
//                 failure{
//                     echo "====++++A execution failed++++===="
//                 }
//             }
//         }
//     }
// }


pipeline {
    agent any
    stages {
        stage("k8s update") {
            steps {
                sh """
                  chmod 600 /var/jenkins_home/secrets/testing.pem
                  chown jenkins:jenkins /var/jenkins_home/secrets/testing.pem
                  """
            }
       }
        stage("k8s update") {
            steps {
                echo "====++++executing A++++===="
                sh "ssh -i /var/jenkins_home/secrets/testing.pem ubuntu@3.70.39.129 kubectl get svc"
                // sh """
                //     ssh -i /var/jenkins_home/secrets/testing.pem ubuntu@3.70.39.129 kubectl patch svc <your-service-name> -p '{"spec": {"externalIPs": ["3.70.39.129"]}}'
                // """
                sh "pwd"
        }    
    }
}
