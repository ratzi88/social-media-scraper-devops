pipeline{
    agent any
    stages{
        stage("Clonning app"){
            steps{
                echo "========app clone========"
                echo "${env.BUILD_ID}"
                echo "${env.BUILD_NUMBER}"

                dir("${env.BUILD_NUMBER}") {
                    // git branch: 'main', credentialsId: 'b4a3c35c-aa99-4abe-8aea-9d83f979cb76', url: 'https://github.com/ratzi88/social-media-scraper-devops'
                    git branch: 'main', credentialsId: '49bd9cd6-738c-4792-a6aa-fc25cffb434c', url: 'https://github.com/ratzi88/social-media-scraper'
                }
            }
            post{
                always{
                    echo "========always========"
                }
                success{
                    sh "rm -rf {${env.BUILD_NUMBER}-1}"
                    sh "rm -rf Jenkins"
                    sh "rm -rf README.md"
                    sh "rm -rf .git"   
                    dir("${env.BUILD_NUMBER}") {
                        sh "rm -rf Jenkins"
                        sh "rm -rf README.md"
                        sh "rm -rf .git"
                    }
                }
                failure{
                    echo "========A execution failed========"
                }
            }
        }
        stage("apt update upgrade"){
            steps{
                sh "sudo apt update && sudo apt upgrade -y"
                }
        }
        stage("Verifications"){
            parallel{
                stage("python installing"){
                    steps{
                        echo "sudo apt install -y python3.11"
                    }
                }
                stage("Other installing"){
                    steps{
                        echo "2222"
                    }
                }                        
            }
        }

        stage("Docker build"){
            steps{
                dir("${env.BUILD_NUMBER}/backend"){
                    sh "docker build -t social-media-scraper:${env.BUILD_NUMBER} ."
                }
            }
        }
        stage("Docker run validation"){
            steps{
                dir("${env.BUILD_NUMBER}/backend"){
                    sh "docker run -d social-media-scraper:${env.BUILD_NUMBER}"
                }
            }
        }
        // stage("sanity test"){
        //     steps{
                    // curl -X POST -H "Content-Type: application/json" -d '{"name": "השם של האדם שתרצה לחפש"}' http://localhost:5000/search
        //         dir("${env.BUILD_NUMBER}/backend"){
        //             sh "docker build -t social-media-scraper:${env.BUILD_NUMBER} ."
        //         }
        //     }
        // }

        stage("Docker push to hub.docker"){
            steps{
                sh "docker tag social-media-scraper:${env.BUILD_NUMBER} sframir/social-media-scraper:latest"
                // sh "docker login"
                sh "docker push sframir/social-media-scraper:latest"
            }
        }
        


    }
    // post{
    //     always{
    //         echo "========always========"
    //     }
    //     success{
    //         echo "========social-media-ci successfully ========"
    //         // build 'social-media-cd', wait: false
    //     }
    //     failure{
    //         echo "========pipeline execution failed========"
    //     }
    // }
}
